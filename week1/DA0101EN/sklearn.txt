from sklearn.linear_model import LinearRegression
lm = LinearRegression()
X = df[['highway-mpg']]
Y = df['price']
lm.fit(X,Y)

Yhat = lm.predict(X)

import seaborn as sns
sns.regplot(x='',y='',data=df)
plt.ylim(0,)

sns.residplot(df[''],df[''])

ax1 = sns.distplot(df[...],hist=False,color='r',label='Actual Value')
sns.distplot(Yhat,hist=False,color='b',label='Fitted Values',ax=ax1)

f=np.polyfit(x,y,3)
p=np.polyld(f)
print(p)

from sklearn.preprocessing import PolynomialFeatures
pr = PolynomialFeatures(degree=2,include_bias=False)
x_polly=pr.fit_transform(x[['horsepower','curb-weight']])

from sklearn.preprocessing import StandardScaler
SCALE = StandardScaler()
SCALE.fit(x_data[['horsepower','highway-map']])
x_scale=SCALE.transform(x_data[['horsepower','highway-mpg']])

from sklearn.pipeline import Pipeline
Input = [('scale',StandardScaler()),('polynomial',PolynomialFeatures(degree=2),...('model',LinearRegression())]
pipe = Pipeline(Input)
Pipe.train(X['','','',''],y)

from sklearn.metrics import mean_square_error
mean_squared_error(df['price'],Y_predict_simple_fit)

new_input = np.arange(1,101,1).reshape(-1,1)